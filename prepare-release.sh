#!/bin/bash

echo "=================================================="
echo "Parser 2GIS Enhanced - Preparation Release Script"
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "parser-2gis.py" ]; then
    echo "ERROR: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —Ä–µ–ª–∏–∑–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–ª–∏–∑–∞..."
mkdir -p release

# –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
echo "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
rsync -av --exclude='*.pyc' --exclude='__pycache__' --exclude='.git' --exclude='build' --exclude='dist' --exclude='.venv' --exclude='release' . release/

# –ö–æ–ø–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è GitHub
echo "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è GitHub..."
cp README_RELEASE.md release/README.md

# –°–æ–∑–¥–∞–µ–º .gitignore –¥–ª—è GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
cat > release/.gitignore << 'EOF'
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
Thumbs.db

# Results
*.csv
*.xlsx
*.json
results/

# Logs
*.log
EOF

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
cat > release/test-enhanced.py << 'EOF'
#!/usr/bin/env python3
"""–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Parser 2GIS"""

import sys
import os

def test_enhanced_features():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Enhanced Edition"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
    try:
        from parser_2gis import main
        from parser_2gis.config import Configuration
        from parser_2gis.parser.options import ParserOptions
        from parser_2gis.chrome.options import ChromeOptions
        print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    parser_opts = ParserOptions()
    chrome_opts = ChromeOptions()
    
    print(f"üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞:")
    print(f"   max_records: {parser_opts.max_records} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å >= 50)")
    print(f"   headless: {chrome_opts.headless} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å False)")
    print(f"   start_maximized: {chrome_opts.start_maximized} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å True)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–∏–º–∏—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if parser_opts.max_records >= 50:
        print("‚úÖ –õ–∏–º–∏—Ç –∑–∞–ø–∏—Å–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
    else:
        print("‚ö†Ô∏è  –õ–∏–º–∏—Ç –∑–∞–ø–∏—Å–µ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    if not chrome_opts.headless and chrome_opts.start_maximized:
        print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –≤–∏–¥–∏–º–æ–≥–æ —Ä–µ–∂–∏–º–∞")
    else:
        print("‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã")
    
    return True

if __name__ == '__main__':
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Parser 2GIS Enhanced Edition")
    print("=" * 50)
    
    success = test_enhanced_features()
    
    if success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print("python parser-2gis.py -i 'https://2gis.ru/moscow/search/–∫–∞—Ñ–µ' -o test.csv -f csv --parser.max-records 10")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        sys.exit(1)
EOF

chmod +x release/test-enhanced.py

echo ""
echo "‚úÖ –†–µ–ª–∏–∑ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –≤ –ø–∞–ø–∫–µ: release/"
echo ""
echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. cd release"
echo "2. git init"
echo "3. git add ."
echo "4. git commit -m 'Initial commit - Parser 2GIS Enhanced Edition'"
echo "5. git remote add origin https://github.com/vnprofi/repo12c.git"
echo "6. git push -u origin main"
echo ""
echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–ª–∏–∑–∞:"
find release -type f -name "*.py" -o -name "*.md" -o -name "*.bat" -o -name "*.sh" -o -name "*.yml" | head -20
echo "..."
echo ""
echo "–ì–æ—Ç–æ–≤–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ GitHub!"