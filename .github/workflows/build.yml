name: Build Parser 2GIS Enhanced

name: Build Parser 2GIS Enhanced

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build

    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            dist: linux

          - os: macos-12
            dist: macos
            ext:

          - os: macos-14
            dist: macos-arm
            ext:

          - os: windows-2019
            dist: windows

    runs-on: ${{ matrix.os }}

    steps:
    - name: Get the version
      id: get_version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash

    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11.3"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[gui,dev]
        # Replace pydantic with no-binary version to lightweight target binary a bit
        # python -m pip uninstall -y pydantic
        # python -m pip install --no-binary pydantic pydantic>=1.9.0

    - name: Build standalone app
      run: |
        python setup.py build_standalone

    - name: Archive Windows distributive
      if: matrix.dist == 'windows'
      run: pushd dist && 7z a ../Parser2GIS-Enhanced-${{steps.get_version.outputs.version}}-${{matrix.dist}}.zip  Parser2GIS.exe && popd
      shell: bash

    - name: Archive Linux/MacOS distributive
      if: matrix.dist != 'windows'
      run: tar -C dist/ -czvf Parser2GIS-Enhanced-${{steps.get_version.outputs.version}}-${{matrix.dist}}.tar.gz Parser2GIS
      shell: bash

    - name: Upload distributive
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.dist }}
        path: Parser2GIS-Enhanced-*
        retention-days: 5