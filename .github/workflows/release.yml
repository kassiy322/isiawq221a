name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build

    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            dist: linux

          - os: macos-12
            dist: macos
            ext:

          - os: macos-14
            dist: macos-arm
            ext:

          - os: windows-2019
            dist: windows

    runs-on: ${{ matrix.os }}

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}
      shell: bash

    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.3"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[gui,dev]
        # Replace pydantic with no-binary version to lightweight target binary a bit
        # python -m pip uninstall -y pydantic
        # python -m pip install --no-binary pydantic pydantic>=1.9.0

    - name: Build standalone app
      run: |
        python setup.py build_standalone

    - name: Archive Windows distributive
      if: matrix.dist == 'windows'
      run: pushd dist && 7z a ../Parser2GIS-${{steps.get_version.outputs.version}}-${{matrix.dist}}.zip  Parser2GIS.exe && popd
      shell: bash

    - name: Archive Linux/MacOS distributive
      if: matrix.dist != 'windows'
      run: tar -C dist/ -czvf Parser2GIS-${{steps.get_version.outputs.version}}-${{matrix.dist}}.tar.gz Parser2GIS
      shell: bash

    - name: Upload distributive
      uses: actions/upload-artifact@v3
      with:
        name: dist-${{ matrix.dist }}
        path: Parser2GIS-*
        retention-days: 5

  release:
    name: Release

    needs: [build]

    runs-on: ubuntu-latest

    steps:
    - name: Get the version
      id: get_version
      run: |
        echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      shell: bash

    - uses: actions/checkout@v3

    - name: Get Changelog Entry
      id: changelog_reader
      uses: mindsers/changelog-reader-action@v2
      with:
        version: ${{ steps.get_version.outputs.version }}
        path: ./CHANGELOG.md

    - uses: actions/download-artifact@v3

    - uses: ncipollo/release-action@v1.10.0
      with:
        tag: v${{ steps.changelog_reader.outputs.version }}
        name: Parser2GIS ${{ steps.changelog_reader.outputs.version }}
        body: ${{ steps.changelog_reader.outputs.changes }}
        prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
        draft: true
        artifacts: "dist-*/*"
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
